" Wayne Robison
" Personalized vimrc file

set nocompatible " Use Vim default settings.

set backspace=indent,eol,start " allow backspacing over everything in insert mode
set ruler " show the cursor position all the time
set laststatus=2

" Tab Settings
set tabstop=4
set shiftwidth=4
set noexpandtab " Prefer tabs over spaces by default. Shift-F6 is mapped to toggle.

set backup " keep a backup file

" Put undo, swap, and backup files in a system directory instead of in the current directory.
let s:uservimdir = fnamemodify($MYVIMRC, ':p:h')
execute 'set backupdir^=' . s:uservimdir . '/.backup//'
execute 'set directory^=' . s:uservimdir . '/.swp//'
execute 'set undodir^=' . s:uservimdir . '/.undo//'

set history=50 " keep 50 lines of command line history
set showcmd " display incomplete commands
set showmatch " Show matching brackets.
" Do case sensitive matching by default (I've mapped <leader>ti to toggle this).
set noignorecase
" Don't do smart case matching (that's when any captials make it case sensitive, even when ignorecase is on).
set nosmartcase
set hidden " Hide buffers when they are abandoned

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" Switch syntax highlighting on.
syntax on
set number

" Set default encoding for older versions of Vim
if v:version < 823
	set encoding=utf-8
endif

" Set space as leader key
noremap <Space> <Nop>
let mapleader = " "
let maplocalleader = " "

" Mappings to open and source vimrc file or source the current file.
nnoremap <Leader>ov :vsplit $MYVIMRC<CR>
nnoremap <Leader>sv :source $MYVIMRC<CR>
nnoremap <Leader>sf :source %<CR>

" Mapping to open the previous buffer in a vertical split.
nnoremap <Leader>op :vsplit #<CR>

" Set things up for the list setting, which shows invisible things like tabs
" and eol, etc.
set listchars=tab:>-,space:Â·
" Toggle Show whitespace
noremap <Leader>ts :set list! list?<CR>
" Toggle Tabs
noremap <Leader>tt :set expandtab! expandtab?<CR>

" NERDTree Mappings
noremap <Leader>e :NERDTreeToggle<CR>
let NERDTreeQuitOnOpen=1

" Switch on highlighting the last used search pattern.
set hlsearch
" Press Space twice to turn off highlighting and clear any message already
" displayed.
nnoremap <silent> <Leader><Leader> :nohlsearch<Bar>:echo<CR>
" Toggle Highlighting, and show current value.
noremap <Leader>th :set hlsearch! hlsearch?<CR>
" Toggle Ignorecase
noremap <Leader>ti :set ignorecase! ignorecase?<CR>
" Highlight all occurrences of the current word.
noremap <Leader>H :let @/='\<<C-R>=expand("<cword>")<CR>\>'<CR>:set hls<CR>

" Easier window navigation
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l

" Move current line/selection up/down using Alt-k/j
noremap <A-k> :m -2<CR>
noremap <A-j> :m +<CR>
inoremap <A-k> <ESC>:m -2<CR>gi
inoremap <A-j> <ESC>:m +<CR>gi
xnoremap <A-k> :m '<-2<CR>gv
xnoremap <A-j> :m '>+<CR>gv

if &term ==? 'win32'
	set termguicolors
endif
set t_Co=256
colorscheme mywombat

" Set gui specific settings (could go in a gvimrc file)
if has("gui_running")
	if has("gui_gtk2")
		set guifont=Inconsolata\ 12
	elseif has("gui_win32")
		set guifont=Inconsolata:h12,Consolas:h12
	endif
	set columns=90
	set lines=40
	set winaltkeys=no

	" Hide scroll bars
	set guioptions-=l
	set guioptions-=L
	set guioptions-=r
	set guioptions-=R
endif

" Turn off the confounded beeping.
set noerrorbells visualbell t_vb=

" Only do this part when compiled with support for autocommands.
if has("autocmd")

	" Enable file type detection.
	" Use the default filetype settings, so that mail gets 'tw' set to 72,
	" 'cindent' is on in C files, etc.
	" Also load indent files, to automatically do language-dependent indenting.
	filetype plugin indent on

	" Put these in an autocmd group, so that we can delete them easily.
	augroup vimrcEx
		au!

		" When editing a file, always jump to the last known cursor position.
		" Don't do it when the position is invalid or when inside an event handler
		" (happens when dropping a file on gvim).
		" Also don't do it when the mark is in the first line, that is the default
		" position when opening a file.
		autocmd BufReadPost *
					\ if line("'\"") > 1 && line("'\"") <= line("$") |
					\   exe "normal! g`\"" |
					\ endif

	augroup END

	" Turn off the confounded beeping.
	autocmd GUIEnter * set visualbell t_vb=

else

	set autoindent        " always set autoindenting on

endif " has("autocmd")

" Configure command line tab completion
set wildmenu
if v:version >= 825
	set wildoptions=pum
endif

" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview

packadd! matchit

execute "source " .. s:uservimdir .. "/plugins.vim"
